//	public static void mazeSearch() {
//		int[] location = Util.Strings.strToIntarr(str);
//		if(set.get(location[0]+","+location[1]).equals(set.get((location[0]+1)+","+location[1])) && output.contains((location[0]+1+","+(location[1]))) == false ) {
//			
//		}
//		if(set.get(location[0]+","+location[1]).equals(set.get((location[0]-1)+","+location[1])) && output.contains((location[0]-1+","+(location[1]))) == false) {
//
//		}
//		if(set.get(location[0]+","+location[1]).equals(set.get(location[0]+","+(location[1]+1))) && output.contains((location[0]+","+(location[1]+1))) == false) {
//
//		}
//		if(set.get(location[0]+","+location[1]).equals(set.get(location[0]+","+(location[1]-1))) && output.contains((location[0]+","+(location[1]-1))) == false) {
//
//		}
//	}


package adventofcodetwentytwentyfour;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;

import utils.Util;



public class DaySixteen {
	public static void main(String[] args) {
		String input

		String line = "#############################################################################################################################################";

		HashMap<String, String> maze = new HashMap<String, String>();
		int len = line.length();
		int height = input.length()/len;
		Integer[] start = {};
		for(int i = 0; i<height;i++) {
			for(int j=0;j<len;j++) {
				maze.put(j+","+i, ""+input.charAt(i*len+j));
				if(input.charAt(i*len+j) == 'S') {
					start = new Integer[] {j,i};
				}
				if(input.charAt(i*len+j) == 'E') {
					agent.goal = new Integer[] {j,i};
					maze.put(j+","+i, ".");
				}
			}
		}

		agent.Maze = maze;
		ArrayList<agent> agents = new ArrayList<agent>();
		ArrayList<agent> finalistAgents = new ArrayList<agent>();
		agents.add(new agent(start.clone(), 1, 1, new ArrayList<String>()));
		agents.add(new agent(start.clone(), 0, 1001, new ArrayList<String>()));
		ArrayList<Long> finalScores = new ArrayList<Long>();
		HashMap<String, Integer> bestBenches = new HashMap<String,Integer>();
		String dirName = "src/adventofcodetwentytwentyfour";
		String fileName = "daysixteen.txt";
		File dir = new File(dirName);
		File actualFile = new File (dir, fileName);
		
		finalScores.add(10000000000000L);
		while(agents.size()>0) {
				@SuppressWarnings("unchecked")
				HashMap<String,String> temp = (HashMap<String, String>) maze.clone();
				for(agent a : agents) {
					temp.put(Util.Strings.intToStr(new int[] {a.Location[0], a.Location[1]}), "@");
				}
				String output = "";
				for(int h = 0; h < height; h++) {
					for(int q = 0; q < len; q++) {
						output+=temp.get(q+","+h);
					}
					output+="\n";
				}
			try (PrintStream out = new PrintStream(new FileOutputStream(actualFile.getCanonicalPath()))) {
				out.print(output);
				out.close();
			}
			catch (Exception e) {
				System.out.print(e);
			}
			for(int i = 0; i < agents.size(); i++) {	
				agents.get(i).step();
				
				if(agents.get(i).onGoal() > 0) {
					finalistAgents.add(agents.get(i));
					finalScores.add(agents.get(i).Score);
					agents.remove(agents.get(i));
					continue;
				}
				else if(agents.get(i).onGoal() == -1) {
					agents.remove(agents.get(i));
					continue;
				}
				if(agents.get(i).Score > Collections.min(finalScores)) {
					agents.remove(agents.get(i));
					continue;
				}


				Integer[] newDirections = agents.get(i).checkNeighbours();

				if(newDirections[0] != null) {
					agents.add(new agent(agents.get(i).Location.clone(), newDirections.clone()[0], agents.get(i).Score+1000, agents.get(i).path));
				}
				if(newDirections[1] != null) {
					agents.add(new agent(agents.get(i).Location.clone(), newDirections.clone()[1], agents.get(i).Score+1000, agents.get(i).path));
				}
				if(newDirections[2] == null) {
					agents.remove(agents.get(i));
					continue;
				}
			}
		}
		for(int i = 0; i < finalistAgents.size(); i++) {
			if(finalistAgents.get(i).Score > Collections.min(finalScores)) {
				finalistAgents.remove(i);
				i--;
			}
		}
		
		for(agent A : finalistAgents) {
			for(String s : A.path) {
				if(!bestBenches.containsKey(s)) {
					bestBenches.put(s, 1);
				}
				else {
					bestBenches.put(s, bestBenches.get(s)+1);
				}
			}
		}
		
		@SuppressWarnings("unchecked")
		HashMap<String,String> temp = (HashMap<String, String>) maze.clone();
		for(String str : bestBenches.keySet()) {
			temp.put(str, "O");
		}
		String output = "";
		for(int h = 0; h < height; h++) {
			for(int q = 0; q < len; q++) {
				output+=temp.get(q+","+h);
			}
			output+="\n";
		}
	try (PrintStream out = new PrintStream(new FileOutputStream(actualFile.getCanonicalPath()))) {
		out.print(output);
		out.close();
	}
	catch (Exception e) {
	}
		
		Collections.sort(finalScores);
		System.out.println(finalScores.get(0));
		System.out.println(bestBenches.size());

	}
}

class agent{
	public static HashMap<String,String> Maze;
	public static HashMap<String, Long> visited = new HashMap<String, Long>();
	public ArrayList<String> path = new ArrayList<String>();
	public static Integer[] goal;
	public Integer[] Location;
	public int Direction;
	public long Score;
	@SuppressWarnings("unchecked")
	agent(Integer[] location, int direction, long score, ArrayList<String> Path){ // direction 0 - north, 1 - east, 2 - south, 3 - west
		// left hand turn is subtracting 1 from direction
		// right hand turn is adding 1 to direction
		this.Location = location;
		this.Direction = direction;
		this.Score = score;
		this.path = (ArrayList<String>) Path.clone();
	}
	public long onGoal() {
		int distance = Math.abs(this.Location[0]-goal[0])+Math.abs(this.Location[1]-goal[1]);
		if(distance < 2) {
			path.add(this.Location[0]+","+this.Location[1]);
			path.add(goal[0]+","+goal[1]);
			return this.Score+distance;
		}
		if(visited.containsKey(this.Location[0]+","+this.Location[1])) {
			if(visited.get(this.Location[0]+","+this.Location[1]) < this.Score) {
				return -1;
			}
		}
		return 0;
	}
	public void step() {
		path.add(this.Location[0]+","+this.Location[1]);
		visited.put(Util.Strings.intToStr(new int[] {this.Location[0], this.Location[1]}), this.Score);
		if(this.Direction == 0) {
			this.Location[1] -= 1;
		}
		else if(this.Direction == 1) {
			this.Location[0] += 1;
		}
		else if(this.Direction == 2) {
			this.Location[1] += 1;
		}
		else if(this.Direction == 3) {
			this.Location[0] -= 1; 
		}
		this.Score+=1L;
	}
	
	
	public Integer[] checkNeighbours() {
		Integer[] returnVal = {null,null,null};
		if(this.Direction == 0) { // north
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0]-1,this.Location[1]})).equals(".")) {//left case
					returnVal[0] = 3;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0]+1,this.Location[1]})).equals(".")) {//right case
					returnVal[1] = 1;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0],this.Location[1]-1})).equals(".")) {//straight case
					returnVal[2] = 0;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
		}
		else if(this.Direction == 1) { // east
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0],this.Location[1]-1})).equals(".")) {//left case
					returnVal[0] = 0;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0],this.Location[1]+1})).equals(".")) {//right case
					returnVal[1] = 2;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}			
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0]+1,this.Location[1]})).equals(".")) {//straight case
					returnVal[2] = 1;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
		}
		else if(this.Direction == 2) { // south
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0]+1,this.Location[1]})).equals(".")) {//left case
					returnVal[0] = 1;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0]-1,this.Location[1]})).equals(".")) {//right case
					returnVal[1] = 3;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0],this.Location[1]+1})).equals(".")) {//straight case
					returnVal[2] = 2;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
		}
		else if(this.Direction == 3) { // west
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0],this.Location[1]+1})).equals(".")) {//left case
					returnVal[0] = 2;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0],this.Location[1]-1})).equals(".")) {//right case
					returnVal[1] = 0;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
			try {
				if(Maze.get(Util.Strings.intToStr(new int[] {this.Location[0]-1,this.Location[1]})).equals(".")) {//straight case
					returnVal[2] = 3;
				}
			}
			catch (Exception e) {
				System.out.println(e);
			}
		}
		return returnVal;
	}
}
