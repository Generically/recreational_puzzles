package adventofcodetwentytwentyfour;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.HashMap;
import utils.Util;

public class DayFourteen {
	static String dirName = "src/adventofcodetwentytwentyfour";
	static String fileName = "robots.txt";
	static File dir = new File(dirName);

	final static int width = 101;
	final static int height = 103;
	static int[][] input = {{67,43,80,86},{47,24,-9,-96},{6,38,10,81},{73,92,36,-93},{74,10,-35,19},{57,59,-5,71},{21,10,48,80},{65,64,81,-36},{79,65,-2,18},{78,87,29,-98},{97,66,-90,86},{18,59,72,-90},{14,32,24,-78},{12,63,-5,4},{69,18,52,59},{52,79,22,18},{62,72,-41,-29},{27,12,23,-14},{33,51,-92,22},{5,9,-21,-49},{37,69,-70,18},{30,77,15,78},{87,13,-86,-68},{30,35,-44,-39},{18,80,-54,61},{93,49,89,-69},{33,24,86,12},{48,62,-53,8},{55,95,-23,41},{53,58,38,-77},{4,11,2,19},{20,34,-14,42},{38,82,22,61},{3,100,96,-59},{90,21,36,46},{60,46,-65,-5},{64,83,18,74},{54,22,-1,34},{1,50,-3,-21},{30,64,-46,-12},{71,95,5,-11},{36,31,-60,-77},{75,68,-53,-81},{36,35,-22,-37},{85,68,-11,-94},{42,48,-88,61},{50,96,-1,-84},{58,28,99,16},{39,39,-30,94},{44,90,-16,92},{35,95,-53,40},{28,85,32,-37},{82,57,-81,-4},{62,68,36,60},{78,83,49,-99},{42,86,84,-11},{6,2,79,49},{16,67,-76,90},{40,77,31,-33},{12,48,-4,-51},{55,26,-39,98},{17,83,14,70},{46,57,-86,-47},{55,51,92,-22},{49,89,-86,27},{10,8,57,6},{91,79,11,-25},{67,102,91,6},{75,41,52,-78},{22,89,9,6},{47,88,7,19},{72,93,-52,-52},{30,16,79,-62},{80,25,-72,50},{30,54,-38,86},{69,14,-89,-83},{61,99,38,64},{98,74,89,-50},{88,17,96,-44},{36,80,68,-36},{4,37,-5,63},{35,22,86,-70},{92,74,-70,-39},{63,59,52,-31},{85,99,-2,15},{75,64,-18,69},{89,42,-47,25},{19,90,19,13},{4,9,17,20},{69,87,68,70},{11,14,48,-1},{61,97,-56,62},{53,51,-78,76},{42,95,-10,6},{55,17,-71,7},{27,15,-78,58},{22,25,-37,-23},{6,48,-99,8},{3,5,-75,-84},{30,99,15,40},{96,53,-67,17},{20,36,-61,-82},{53,13,69,-6},{86,8,20,-62},{37,49,-7,-91},{46,86,7,-68},{33,71,8,-25},{83,50,4,-13},{57,89,-76,20},{46,27,-63,-27},{32,18,-45,-87},{92,57,-13,-55},{45,19,23,-17},{5,15,-53,-14},{7,39,81,-80},{90,51,42,64},{20,4,-45,23},{76,29,51,-47},{75,83,59,-42},{6,65,57,-51},{51,73,85,-81},{86,66,92,66},{74,95,90,49},{24,102,82,54},{62,33,80,6},{69,60,-34,-30},{22,84,-61,18},{89,45,50,81},{2,3,34,78},{34,44,96,-34},{82,11,-81,84},{69,57,83,-34},{37,44,47,77},{48,75,-71,48},{62,30,-56,55},{0,61,-36,35},{2,36,-59,59},{83,80,50,9},{2,15,-45,-96},{87,92,-27,40},{23,38,1,64},{18,14,82,19},{32,30,64,29},{25,61,-7,-90},{45,16,66,82},{78,62,-42,-13},{61,4,58,-45},{33,49,-49,-2},{58,96,75,71},{7,69,16,88},{98,53,26,-99},{13,63,49,73},{66,64,44,-4},{56,24,-32,33},{31,56,67,85},{59,86,-41,74},{43,74,52,4},{56,84,-72,-21},{22,67,70,35},{44,65,-24,-17},{34,55,35,38},{100,101,26,49},{22,17,74,70},{82,23,21,-65},{5,40,9,-6},{11,22,-95,37},{8,9,80,-36},{3,40,5,-30},{60,83,76,87},{72,5,-34,-88},{3,13,-44,97},{50,62,-71,-60},{17,5,-53,58},{44,0,-47,35},{69,18,92,-32},{20,98,88,41},{59,1,-25,-92},{97,22,49,13},{14,81,-6,82},{76,97,-80,-89},{63,21,-94,12},{1,67,47,56},{10,52,-77,-50},{36,89,-86,-89},{65,11,29,-28},{95,93,-12,-84},{50,95,-71,75},{25,22,55,50},{26,28,55,89},{90,36,-74,89},{8,19,50,88},{44,48,-23,8},{100,70,49,39},{51,7,22,-19},{56,51,92,34},{64,93,-18,-47},{42,40,38,-18},{3,22,-14,7},{21,62,-34,-87},{44,81,-48,69},{54,86,76,2},{94,0,-80,88},{64,64,76,43},{0,10,-5,-88},{100,7,64,-28},{40,79,-8,-33},{35,41,-54,21},{64,43,38,96},{21,14,18,-23},{50,88,22,23},{63,94,76,-97},{72,36,84,17},{71,29,-70,-8},{57,63,23,17},{33,58,-22,-24},{75,16,-18,50},{80,49,29,77},{40,63,85,-99},{38,88,8,-58},{29,70,-37,52},{80,60,20,-51},{40,86,-86,-68},{2,69,-36,-34},{4,38,93,51},{12,28,27,-94},{36,70,92,95},{94,90,59,-59},{60,16,-41,-28},{75,89,28,48},{1,27,4,-40},{45,9,45,51},{34,10,17,84},{84,58,-20,-16},{22,92,49,36},{6,51,-43,-65},{100,41,-28,47},{52,87,-85,55},{44,38,98,4},{44,41,15,51},{47,92,76,28},{10,69,-37,48},{50,64,23,86},{22,92,6,-51},{32,17,-77,-57},{59,97,-1,53},{88,24,-26,-83},{25,86,32,2},{88,79,46,98},{58,41,61,-78},{82,45,-90,55},{6,78,88,65},{62,82,-77,-61},{94,65,-76,-76},{90,12,3,59},{53,8,22,71},{66,102,-2,-24},{86,9,13,84},{32,102,62,36},{74,50,36,30},{75,7,5,-79},{77,0,58,83},{2,62,18,-90},{12,80,48,31},{67,22,-64,37},{7,52,49,49},{46,12,-79,-11},{53,49,38,-91},{43,82,-55,-46},{43,42,89,35},{20,17,33,45},{30,48,-7,64},{72,19,4,50},{64,62,-2,30},{36,93,8,23},{41,46,-62,-56},{15,52,5,-17},{61,8,-89,10},{7,93,80,-93},{65,97,-95,19},{30,92,68,-66},{72,97,67,23},{74,102,-42,-24},{38,0,85,2},{21,12,71,-2},{64,85,55,-83},{71,70,-10,39},{30,72,15,75},{66,85,-2,-76},{98,78,-12,69},{8,102,87,36},{100,7,-58,-23},{35,1,-85,88},{31,100,-42,-2},{39,0,71,83},{4,22,-20,-90},{68,53,-31,8},{26,21,17,-36},{75,100,-34,-84},{21,50,-4,10},{55,26,64,74},{96,11,78,56},{61,55,-25,38},{14,75,-76,78},{27,41,-56,-99},{44,79,77,-76},{65,96,-2,66},{97,51,65,-9},{98,41,-98,81},{52,5,-31,-88},{83,6,-59,-70},{53,75,-17,-12},{81,97,81,-89},{40,2,34,-66},{86,42,74,47},{16,12,-28,-44},{44,40,-6,74},{100,11,-44,97},{66,95,98,74},{59,2,-87,24},{89,36,-93,-90},{30,62,-46,-34},{19,39,-99,-46},{15,95,-63,-17},{54,25,-56,76},{13,98,-78,-11},{28,100,86,19},{83,45,51,-13},{91,53,-35,-69},{32,1,-98,-48},{66,83,66,94},{3,12,-72,-66},{87,13,58,-75},{0,35,-83,-1},{31,74,86,53},{40,66,93,-21},{59,52,-71,95},{19,70,79,-55},{65,85,-93,-74},{98,68,74,-50},{79,50,-82,-5},{25,45,-87,40},{4,97,-52,-88},{47,28,63,-11},{5,41,57,55},{56,84,-87,74},{77,15,51,84},{2,45,-45,-99},{31,38,78,68},{88,57,59,48},{39,22,-70,16},{79,4,-81,84},{28,66,10,39},{10,28,-53,-79},{22,20,87,50},{35,67,43,-25},{32,59,-38,-17},{83,2,-80,79},{47,47,-75,5},{17,59,74,-49},{6,50,73,-61},{76,62,-89,1},{33,14,47,-23},{18,54,17,34},{19,72,-42,-22},{89,58,-97,86},{87,73,-74,-20},{98,30,-90,-1},{53,72,-1,-93},{0,23,10,-96},{39,0,59,34},{90,68,-69,31},{10,29,97,52},{98,30,-66,34},{58,98,84,40},{82,33,59,72},{64,79,21,14},{26,30,72,59},{68,83,-43,58},{27,59,-15,-13},{86,96,-66,62},{49,100,38,28},{49,57,-24,47},{60,101,-25,35},{1,97,-59,36},{20,101,19,-7},{31,87,24,36},{84,77,-28,-46},{10,3,-5,75},{77,52,37,-81},{24,0,92,-61},{89,43,97,-95},{48,9,-40,71},{0,45,95,-73},{8,40,-13,42},{94,7,59,-6},{93,33,3,72},{0,68,-45,-65},{76,41,-11,-71},{86,85,-96,32},{76,41,9,55},{67,79,58,20},{55,56,82,37},{54,45,-56,64},{4,24,-44,16},{47,52,-94,64},{49,71,55,-7},{65,28,-2,-74},{66,56,29,-26},{81,9,-65,-57},{26,15,-92,67},{62,95,4,61},{46,0,67,-91},{20,11,-53,-32},{89,65,-27,69},{94,27,53,93},{33,2,-30,-84},{73,102,83,80},{32,80,-70,-94},{56,81,63,-72},{44,57,-56,-94},{92,62,-51,1},{77,71,-18,-51},{25,48,41,12},{74,16,-42,-61},{69,10,20,-52},{100,33,18,-1},{45,46,55,-1},{1,58,21,-74},{69,61,68,86},{25,102,1,79},{17,28,25,-27},{43,10,-30,-79},{10,91,-54,13},{41,75,39,-38},{68,88,-49,96},{83,38,98,-61},{0,64,-19,32},{100,36,81,-82},{21,98,71,-50},{98,41,-91,13},{33,31,3,30},{53,89,-40,40},{86,26,-19,-83},{31,32,86,12},{97,99,-50,-15},{73,44,-65,98},{4,85,96,-80},{7,15,-91,-27},{100,7,64,7},{50,25,84,-22},{27,1,-8,-93},{93,38,69,-37},{32,65,17,-89},{61,86,22,-93},{27,48,71,-13},{60,22,-29,-61},{42,53,-70,77},{47,60,38,-42},{38,61,32,-39},{58,72,-9,95},{53,85,22,-63},{71,94,83,-54},{67,18,-80,-79},{58,53,53,-56},{19,33,9,82},{90,40,4,4},{95,101,11,-11},{46,21,-36,46},{81,43,-31,14},{38,83,-80,13},{20,45,-68,-5},{35,70,-53,70},{91,35,65,90},{99,76,-59,-7},{87,39,-66,55},{64,58,59,73},{46,100,93,49},{19,36,33,-61},{39,101,-62,6},{50,17,-68,36},{35,78,-17,99},{23,3,29,53},{49,43,-61,-79},{97,65,-74,86},{47,14,-64,67},{43,84,47,33},{30,87,-92,-28},{4,81,-72,65},{93,86,97,87},{41,64,70,-81},{6,13,3,-19},{19,29,80,-6},{39,49,27,70},{15,32,66,48},{62,40,-25,-9},{90,29,-4,76},{55,4,-1,93},{50,85,35,88},{5,84,48,87},{58,9,92,-15}};
	
	//static int[][] input = {{0,4,3,-3},{6,3,-1,-3},{10,3,-1,2},{2,0,2,-1},{0,0,1,3},{3,0,-2,-2},{7,6,-1,-3},{3,0,-1,-2},{9,3,2,3},{7,3,-1,2},{2,4,2,-3},{9,5,-3,-3}};
	static int seconds = width*height;
	public static void main(String[] args) {
		ArrayList<robots> bots = new ArrayList<robots>();
		for(int[] i : input) {
			bots.add(new robots(i));
		}
		try (PrintStream out = new PrintStream(new FileOutputStream(new File (dir, fileName)))) {
			for(int i = 0; i < seconds; i++) {
				for(int robot = 0; robot < bots.size(); robot++) {
					bots.get(robot).updatePosition();
				}
				int[][] display = new int[width][height];
				System.out.println(i);
				for(int robot = 0; robot < bots.size(); robot++) {
					display[bots.get(robot).getPos()[0]][bots.get(robot).getPos()[1]]=1;
				}
				out.println("\n"+(i+1)+":\n");
				for(int[] w : display) {
					for(int h : w) {
						if(h == 0) {
							out.print(" ");
						}
						else {
							out.print("8");
						}
						//out.print(h);
					}
					out.println();
				}
			}
	        out.close();

		}
		catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int[] quadrantCount = {0,0,0,0,0};
		for(int robot = 0; robot < bots.size(); robot++) {
			quadrantCount[getQuadrant(bots.get(robot).getPos())]+=1;
		}
		int safetyFactor = quadrantCount[1]*quadrantCount[2]*quadrantCount[3]*quadrantCount[4];
		System.out.println(safetyFactor);
	}
	
	public static int getQuadrant (int[] pos) {
		//1=topleft 2=topright 3=bottomleft 4=bottomright 0=N/A
		int halfwidth = width/2;
		int halfheight = height/2;
		//System.out.println(pos[0]+","+pos[1]+"  "+halfwidth+","+halfheight);
		if(pos[0]<halfwidth) {
			if(pos[1]<halfheight) {
				return 1;
			}
			if(pos[1]>halfheight) {
				return 3;
			}
		}
		if(pos[0]>halfwidth) {
			if(pos[1]<halfheight) {
				return 2;
			}
			if(pos[1]>halfheight) {
				return 4;
			}
		}
		return 0;
	}
}

class robots {
	final static int width = 101;
	final static int height = 103;
	int[] p;
	int[] v;
	
	public robots(int[] positionandvelocity) {
		p = new int[] {positionandvelocity[0],positionandvelocity[1]};
		v = new int[] {positionandvelocity[2],positionandvelocity[3]};
		//System.out.println(this.p[0]+","+this.p[1]+"  "+v[0]+","+v[1]);

	}
	
	public void updatePosition() {
		this.p[0] = (this.p[0]+this.v[0]);
		this.p[1] = (this.p[1]+this.v[1]);
		if(this.p[0]>width-1) {this.p[0]-=width;}
		if(this.p[1]>height-1) {this.p[1]-=height;}
		if(this.p[0]<0) {this.p[0]+=width;}
		if(this.p[1]<0) {this.p[1]+=height;}
		//System.out.println(this.p[0]+","+this.p[1]+"  "+v[0]+","+v[1]);
	}
	
	public int[] getPos() {
		return new int[] {this.p[0],this.p[1]};
	}
}
